/* Transfering ownership of threads */
#include<iostream>
#include<thread>
#include<string>
using namespace std;

class Anupam {
	private:
		string& s;
	public:
		Anupam(string& t):s(t) {
			cout<<"Constructor is called s = "<<s<<endl;
		}

		~Anupam() {
			cout<<"Destructor is called ith s = "<<s<<endl;
		}

		void operator() () {
			cout<<"Operator is being called"<<endl;
		}

		Anupam operator= (Anupam const&) = delete;
};

int main() {
	string s = "Anupam";
	thread t1 {Anupam(ref(s))};
	thread t2 = move(t1);
	t2.join();
	if(!t1.joinable) {
		cout<<"t1 is no longer joinable"<<endl;
	}
}
